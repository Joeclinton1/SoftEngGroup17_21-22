{"version":3,"sources":["components/OptionsContext.jsx","components/SimpleChat.jsx","routes/chat.jsx","routes/options.jsx","routes/home.jsx","components/Navbar.jsx","components/DrawerHeader.jsx","components/LeftMenu.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["defaultOptions","fontSize","chatColour","lang","numResults","isSummarised","OptionsContext","React","SimpleChat","currentMessages","typingIndicatorStatus","handleSend","typingIndicator","content","fontSizes","chatColours","Consumer","options","style","showConf","map","g","direction","Messages","messages","m","model","type","payload","id","onSend","placeholder","require","version","authenticator","IamAuthenticator","apikey","serviceUrl","window","localStorage","setItem","ChatGroup","this","ChatMessage","initialMessages","links","Chat","props","colourChat","colour","document","getElementsByClassName","getAttribute","forEach","selector","colourable","querySelectorAll","backgroundColor","componentDidMount","componentDidUpdate","getFile","e","a","preventDefault","reader","FileReader","onload","text","target","result","jsonParse","JSON","parse","newMessages","i","length","messagesToAdd","j","push","setState","readAsText","files","receiveNextMessage","resp","scores","key","state","substring","concat","String","Number","toFixed","stringify","saveFunction","element","createElement","file","Blob","href","URL","createObjectURL","currentTime","Date","toLocaleString","timeFormatted","download","body","appendChild","click","msgs","msg","lastGroup","slice","callWD","getItem","cookies","addEventListener","storageChanged","bind","newValue","fetch","then","res","json","matching_results","setTimeout","resultWD","passages","resultST","session_token","numRes","resultDI","document_id","rtext_in","console","log","passage_score","resArray","passage_text","responses","results","extracted_metadata","filename","catch","err","Stack","spacing","display","maxWidth","minWidth","Button","variant","onClick","accept","onChange","htmlFor","component","Component","DynamicSelect","label","changeCookie","handleChange","MenuItems","FormControl","fullWidth","InputLabel","Select","labelId","value","event","index","MenuItem","Options","context","setOptions","set","path","Card","sx","flexDirection","rowGap","outline","padding","x","contextType","Home","Title","useLocation","pathname","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","drawerWidth","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","NavBar","position","Toolbar","IconButton","color","handleDrawerOpen","edge","mr","Typography","noWrap","align","flexGrow","alignItems","mixins","toolbar","justifyContent","MenuListItem","icon","to","ListItem","button","Link","ListItemIcon","ListItemText","primary","LetftMenu","Drawer","flexShrink","boxSizing","anchor","DrawerHeader","handleDrawerClose","Divider","List","Cookies","Main","App","setOpen","get","cookieOptions","Object","fromEntries","optionName","Provider","Box","height","CssBaseline","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d86f44d7.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport const defaultOptions = {\r\n    fontSize: 0,\r\n    chatColour: 'b',\r\n    lang: 0,\r\n    numResults: 1,\r\n    isSummarised: 1\r\n}\r\n\r\nexport const OptionsContext = React.createContext(defaultOptions);","import styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {\r\n    MainContainer,\r\n    ChatContainer,\r\n    MessageList,\r\n    Message,\r\n    MessageGroup,\r\n    TypingIndicator,\r\n    MessageInput,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport { OptionsContext } from \"../components/OptionsContext\";\r\n\r\nexport default function SimpleChat({currentMessages, typingIndicatorStatus, handleSend}){\r\n\r\n    const typingIndicator = typingIndicatorStatus ? <TypingIndicator content=\"IBM chatbot is typing\" /> : 0\r\n\r\n    //  options of styles to be selected by option.\r\n    const fontSizes = {\r\n        0: \"0.8em\",\r\n        1: \"1em\",\r\n        2: \"1.35em\",\r\n        3: \"1.7em\"\r\n    }\r\n\r\n    const chatColours = {\r\n        'r': '#fac6c6',\r\n        'b': '#c6e3fa',\r\n        'g': '#c6facc',\r\n        'y': '#faf8c6',\r\n    }\r\n\r\n    return(\r\n        <OptionsContext.Consumer>\r\n            {options => (\r\n                <MainContainer\r\n                    data-colour={chatColours[options.chatColour]}\r\n                    data-num-results={options.numResults}\r\n                    style={{\r\n                        \"fontSize\": fontSizes[options.fontSize]\r\n                    }}\r\n                    data-show-conf={options.showConf}>\r\n                    <ChatContainer>\r\n                        <MessageList typingIndicator={typingIndicator}>\r\n                            {currentMessages.map((g) => <MessageGroup key={g.id} direction={g.direction}>\r\n                                <MessageGroup.Messages>\r\n                                    {g.messages.map((m) =>\r\n                                        <Message key={m.id} model={{\r\n                                            type: \"html\",\r\n                                            payload: m.content\r\n                                        }} />\r\n                                    )}\r\n                                </MessageGroup.Messages>\r\n                            </MessageGroup>)}\r\n                        </MessageList>\r\n                        <MessageInput data-testid=\"message-input\" onSend={handleSend} placeholder=\"Type message here\" />\r\n                    </ChatContainer>\r\n                </MainContainer>\r\n            )}\r\n        </OptionsContext.Consumer>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport SimpleChat from \"../components/SimpleChat\"\r\n\r\n\r\n//Initialize Watson instance\r\nconst DiscoveryV1 = require('ibm-watson/discovery/v1');\r\nconst { IamAuthenticator } = require('ibm-watson/auth');\r\n\r\nconst discovery = new DiscoveryV1({\r\n    version: '2019-04-30',\r\n    authenticator: new IamAuthenticator({\r\n        apikey: '__Kp8R3pLrESr2vmVT4vRjsgBEo5ZKkWHPPar0pOOti2',\r\n    }),\r\n    serviceUrl: 'https://api.eu-gb.discovery.watson.cloud.ibm.com/instances/d874b546-9b02-4c6a-bc6c-3042fedb37be',\r\n});\r\n\r\n\r\nwindow.localStorage.setItem('currentMessages', []);\r\n\r\n\r\nclass ChatGroup {\r\n    constructor(id, direction, messages) {\r\n        this.id = id;\r\n        this.direction = direction;\r\n        this.messages = messages;\r\n    }\r\n}\r\n\r\nclass ChatMessage {\r\n    constructor(id, content) {\r\n        this.id = id;\r\n        this.content = content;\r\n    }\r\n}\r\n\r\nconst initialMessages = [new ChatGroup(0, \"incoming\", [\r\n    new ChatMessage(0, \"Hello, thank you for using IBM's chatbot assistance tool.\"),\r\n    new ChatMessage(1, \"What would you like to know about IBM Cloud for Financial Services?\")\r\n])]\r\n\r\nconst links = {\r\n    \"Data sheet.pdf\" : \"https://www.ibm.com/downloads/cas/1OLRGDBA?\",\r\n    \"What is IBM Cloud for Financial Services.html\":\"https://cloud.ibm.com/docs/overview?topic=overview-what-is-fscloud\",\r\n    \"IBM Cloud for Financial Services _ IBM.html\":\"https://www.ibm.com/cloud/financial-services\",\r\n    \"Cloud for FS FAQ & Field Guide.docx\": \"https://docs.google.com/document/d/1TAytTSvitpXWAl5kQUiDQDqOgx4KsLvB/edit?usp=sharing&ouid=113384434230823271599&rtpof=true&sd=true\",\r\n    \"Cloud for FS FAQ & Field Guide 1.docx\":\"https://docs.google.com/document/d/1eZEAA59VF6oy9lpXDgGlTUkV8oE4bZsb-vlVRsycrC8/edit?usp=sharing\",\r\n    \"Cloud for FS FAQ & Field Guide 2.docx\":\"https://docs.google.com/document/d/1DtpHtx5gpI9EhzWe81RGd9y3EJHumbPMor-f6G6x0WY/edit?usp=sharing\",\r\n    \"Cloud for FS FAQ & Field Guide 3.docx\":\"https://docs.google.com/document/d/1JgRh_lcxpBxp6rvxQUKyfRBxxqBP1hbC/edit?usp=sharing&ouid=113384434230823271599&rtpof=true&sd=true\",\r\n    \"Cloud for FS FAQ & Field Guide 4.docx\":\"https://docs.google.com/document/d/1nJqSfVz3RFG4540QxYEiWWTcIDShGDVV/edit?usp=sharing&ouid=113384434230823271599&rtpof=true&sd=true\",\r\n    \"Cloud for FS FAQ & Field Guide 5.docx\":\"https://docs.google.com/document/d/1vVHtCa50BmZJ1PmzP3FQ_y_jjwRjonu0XQe7nk3qKpk/edit?usp=sharing\"\r\n}\r\n\r\nclass Chat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var text = ''\r\n\r\n        if (!!(window.localStorage.getItem(\"currentMessages\"))) {\r\n            text = JSON.parse(window.localStorage.getItem(\"currentMessages\"));\r\n        }\r\n\r\n        this.cookies = this.props.cookies\r\n        this.state = {\r\n            currentMessages: text || initialMessages,\r\n            typingIndicatorStatus: false,\r\n        }\r\n\r\n        window.addEventListener('storage', (e) => this.storageChanged(e));\r\n\r\n        this.storageChanged = this.storageChanged.bind(this);\r\n    }\r\n\r\n    //ran if Storage changes\r\n    storageChanged(e) {\r\n        if (e.key === 'currentMessages') {\r\n            this.setState({ currentMessages: e.newValue })\r\n        }\r\n    }\r\n\r\n    colourChat = () => {\r\n        const chatContainer = document.getElementsByClassName(\"cs-main-container\")[0];\r\n        const colour = chatContainer.getAttribute(\"data-colour\")\r\n        const selectors = [\r\n            \".cs-message__content\",\r\n            \".cs-message-input__content-editor\",\r\n            \".cs-message-input__content-editor-wrapper\"\r\n        ]\r\n        selectors.forEach((selector) => {\r\n            const colourable = document.querySelectorAll(selector)\r\n            for (const el of colourable) {\r\n                el.style.backgroundColor = colour;\r\n            }\r\n        })\r\n    }\r\n    componentDidMount = () => { this.colourChat() }\r\n    componentDidUpdate = () => { this.colourChat() }\r\n\r\n    getFile = async (e) => {\r\n        e.preventDefault()\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = async (e) => {\r\n            const text = (e.target.result)\r\n            let jsonParse = JSON.parse(text)\r\n            let newMessages = []\r\n\r\n            for (let i = 0; i < jsonParse.length; i++) {\r\n                let messagesToAdd = []\r\n\r\n                for (let j = 0; j < jsonParse[i].messages.length; j++) {\r\n                    messagesToAdd.push(new ChatMessage(jsonParse[i].messages[j].id, jsonParse[i].messages[j].content))\r\n                }\r\n\r\n                newMessages.push(new ChatGroup(jsonParse[i].id, jsonParse[i].direction, messagesToAdd))\r\n            }\r\n\r\n            this.setState({ currentMessages: newMessages })\r\n\r\n        };\r\n        reader.readAsText(e.target.files[0])\r\n    }\r\n\r\n    receiveNextMessage = (resp, scores) => {\r\n        // if Watson returned no results\r\n        var key = this.state.currentMessages.length\r\n        if (resp === \"empty\") {\r\n            this.setState({ typingIndicatorStatus: false });\r\n            this.setState({\r\n                currentMessages: [\r\n                    ...this.state.currentMessages,\r\n                    new ChatGroup(key, \"incoming\", [\r\n                        new ChatMessage(0,\r\n                            \"I'm sorry, I couldn't understand. Could you please rephrase the question?\"\r\n                        )\r\n                    ]),\r\n                ]\r\n            })\r\n        } else if (document.getElementsByClassName(\"cs-main-container\")[0].getAttribute(\"data-show-conf\") == 1){\r\n            this.setState({ typingIndicatorStatus: false });\r\n            for (let i = 0; i < resp.length; i++) {\r\n                this.setState({\r\n                    currentMessages: [\r\n                        ...this.state.currentMessages,\r\n                        new ChatGroup(key, \"incoming\", [\r\n                            new ChatMessage(0,\r\n                                resp[i].substring(0, 300)\r\n                            ),\r\n                            new ChatMessage(1,\r\n                                \"Confidence score: \".concat(String(Number((scores[i]).toFixed(2))))\r\n                            ),\r\n                        ]),\r\n                    ]\r\n                })\r\n                key = key + 1\r\n            }\r\n            this.setState({\r\n                currentMessages: [\r\n                    ...this.state.currentMessages,\r\n                    new ChatGroup(key, \"incoming\", [\r\n                        new ChatMessage(0,\r\n                            \"Does this answer your question?\"\r\n                        )\r\n                    ]),\r\n                ]\r\n            });\r\n        } else {\r\n            //Display answer in chat component\r\n            this.setState({ typingIndicatorStatus: false });\r\n            for (let i = 0; i < resp.length; i++) {\r\n                this.setState({\r\n                    currentMessages: [\r\n                        ...this.state.currentMessages,\r\n                        new ChatGroup(key, \"incoming\", [\r\n                            new ChatMessage(0,\r\n                                resp[i].substring(0, 1000)\r\n                            ),\r\n                        ]),\r\n                    ]\r\n                })\r\n                key = key + 1\r\n            }\r\n            this.setState({\r\n                currentMessages: [\r\n                    ...this.state.currentMessages,\r\n                    new ChatGroup(key, \"incoming\", [\r\n                        new ChatMessage(0,\r\n                            \"Does this answer your question?\"\r\n                        )\r\n                    ]),\r\n                ]\r\n            });\r\n        }\r\n        window.localStorage.setItem(\"currentMessages\", JSON.stringify(this.state.currentMessages))\r\n    }\r\n\r\n    saveFunction = () => {\r\n        // get elemnt for saving file\r\n        const element = document.createElement(\"a\");\r\n        // get data from object and use JSON.stringify to convert to text\r\n        const file = new Blob([JSON.stringify(this.state.currentMessages)], { type: 'text/plain' });\r\n        element.href = URL.createObjectURL(file);\r\n\r\n        // get current time and date for use in filename\r\n        let currentTime = new Date().toLocaleString();\r\n        ////console.log(currentTime.substring(0, 10))\r\n        //console.log(currentTime.substring(12))\r\n\r\n        let timeFormatted = currentTime.substring(0, 10) + \"_\" + currentTime.substring(12)\r\n\r\n        // download file to users local storage\r\n        element.download = \"transcipt_\" + timeFormatted + \".json\";\r\n        document.body.appendChild(element); // Required for this to work in FireFox\r\n        element.click();\r\n    }\r\n\r\n    //Get request to send query\r\n    callWD(text) {\r\n        fetch(\"/queryWD?qtext=\".concat(text))\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                // If Watson returns no results\r\n                // Need to be able to handle when Watson returns a JSON with different structure then usual (e.g. response to query: Who are you)\r\n                if (res.result.matching_results == 0) {\r\n                    setTimeout(this.receiveNextMessage('empty'), 1000)\r\n                } else {\r\n                    var resultWD = res.result.passages\r\n                    var resultST = res.result.session_token\r\n\r\n                    const numRes = document.getElementsByClassName(\"cs-main-container\")[0].getAttribute(\"data-num-results\")\r\n\r\n                    for(let i = 0; i<numRes; i++){\r\n                        var resultDI = res.result.passages[i].document_id\r\n\r\n                        var rtext_in = resultST.concat('^').concat(resultDI)\r\n                        //Relevancy code (Moved to backend i.e. app.js)\r\n                        fetch(\"/relev?rtext=\".concat(rtext_in))\r\n                            .then(res => console.log(res))\r\n                    }\r\n\r\n                    const scoreArray = res.result.passages.map((res) => res.passage_score).slice(0, numRes)\r\n                    const resArray = resultWD.map((res) => res.passage_text).slice(0, numRes)\r\n                    console.log(resArray)\r\n                    const responses = []\r\n                    for (let i = 0; i < numRes; i++){\r\n                        responses.push(resArray[i]+\"\\nLink to document: \" + links[res.result.results[i].extracted_metadata.filename])\r\n                    }\r\n                    console.log(responses)\r\n                    //Send results to recieveNextMessage\r\n                    setTimeout(this.receiveNextMessage(responses), 1000)\r\n                }\r\n            })\r\n            .catch(err => err);\r\n    }\r\n\r\n    handleSend = (text) => {\r\n        const msgs = this.state.currentMessages\r\n        const id = msgs.length;\r\n        const msg = new ChatMessage(id, text);\r\n        const lastGroup = msgs[msgs.length - 1]\r\n        if (lastGroup.direction === \"outgoing\") {\r\n            lastGroup.messages.push(msg);\r\n            this.setState({\r\n                currentMessages: [\r\n                    ...msgs.slice(0, -1),\r\n                    lastGroup\r\n                ]\r\n            });\r\n        } else {\r\n            this.setState({\r\n                currentMessages: [\r\n                    ...msgs,\r\n                    new ChatGroup(msgs.length, \"outgoing\", [msg])\r\n                ]\r\n            }, () => {\r\n                //send query to Watson and handle response\r\n                this.callWD(text)\r\n            });\r\n        }\r\n        window.localStorage.setItem(\"currentMessages\", JSON.stringify(this.state.currentMessages))\r\n        this.setState({ typingIndicatorStatus: true});\r\n        //console.log(JSON.parse(window.localStorage.getItem(\"currentMessages\")))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Stack direction=\"column\" spacing={2} style={{ display: \"flex\", maxWidth: \"500px\", minWidth: \"300px\" }}>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Button variant=\"outlined\" onClick={() => { this.saveFunction(); }}>Export Current Chat</Button>\r\n                    <input type=\"file\" accept=\"/*\" style={{ display: 'none' }} id=\"contained-button-file\" onChange={(e) => this.getFile(e)} />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button variant=\"outlined\" component=\"span\" > Load Previous Chat </Button>\r\n                    </label>\r\n                </Stack>\r\n                <SimpleChat\r\n                    currentMessages={this.state.currentMessages}\r\n                    typingIndicatorStatus={this.state.typingIndicatorStatus}\r\n                    handleSend = {this.handleSend}\r\n                />\r\n            </Stack>\r\n        )\r\n    }\r\n}\r\nexport default Chat;\r\n\r\n\r\n// const item = window.localStorage.getItem('currentMessages');\r\n// const getInitialMessages = () =>{\r\n//     if(item !== null){\r\n//         return JSON.parse(item);\r\n//     }else return(\r\n//         new ChatGroup(0, \"incoming\", [\r\n//             new ChatMessage(0, \"Hi\"),\r\n//             new ChatMessage(1, \"What would you like to know about IBM Cloud for Financial Services?\")\r\n//         ])\r\n//     );\r\n// }\r\n\r\n// useEffect(() => {\r\n//     setCurrentMessages();\r\n//   }, []);\r\n\r\n// useEffect(() => {ls\r\n//     window.localStorage.setItem('currentMessages', currentMessages);\r\n// }, [currentMessages]);","import React, { Component} from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {OptionsContext} from \"../components/OptionsContext\"\r\n\r\n\r\nconst DynamicSelect = ({id, label, state, changeCookie, handleChange, MenuItems}) => (\r\n    /*\r\n    id: a unique name to describe the form input\r\n    label: the human readable name that will be displayed\r\n    value: the value connected to the state\r\n    handleChange: function to be called on value change\r\n    changeCookie: function to be called to update cookie values\r\n    MenuItems: list of (value, label) pairs    \r\n    */\r\n    <FormControl fullWidth>\r\n        <InputLabel id={`${id}-select-label`}>{label}</InputLabel>\r\n        <Select\r\n            labelId={`${id}-select-label`}\r\n            id={`${id}-select`}\r\n            value={state[id]}\r\n            label={label}\r\n            onChange={(event)=>{\r\n                handleChange(id, event)\r\n                changeCookie(id, event.target.value)\r\n            }}\r\n        >\r\n        {MenuItems.map(([value,label], index) =>(\r\n            <MenuItem key= {index} value={value}>{label}</MenuItem>\r\n        ))}\r\n        </Select>\r\n    </FormControl>\r\n)\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setOptions = this.props.setOptions\r\n        this.cookies = this.props.cookies\r\n        console.log(this.context)\r\n        this.state = {\r\n            fontSize: 0,\r\n            chatColour: 0,\r\n            showConf: 0,\r\n            // lang: this.cookies.get('lang'),\r\n            numResults: 0,\r\n            isSummarised: 0\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount = ()=>{\r\n        this.setState(this.context)\r\n    }\r\n    handleChange = (id, event)=>{\r\n        this.setState({[id]: event.target.value}, ()=>{this.setOptions(this.state)});\r\n    }\r\n    \r\n    changeCookie = (id, value)=>{\r\n        this.cookies.set(id, value, { path: '/' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card sx={{ \r\n                minWidth: 400,\r\n                display:\"flex\",\r\n                flexDirection: \"column\",\r\n                rowGap: \"30px\",\r\n                outline: \"1px solid #ccc\",\r\n                padding: \"20px\",\r\n            }}>\r\n\r\n                <DynamicSelect \r\n                    id = \"fontSize\"\r\n                    label = \"Font Size\"\r\n                    state = {this.state}\r\n                    handleChange = {this.handleChange}\r\n                    changeCookie = {this.changeCookie}\r\n                    MenuItems = {[\r\n                        [0,\"Small\"],\r\n                        [1,\"Normal\"],\r\n                        [2,\"Large\"],\r\n                        [3,\"Very Large\"]\r\n                    ]}\r\n                />\r\n\r\n                <DynamicSelect \r\n                    id = \"chatColour\"\r\n                    label = \"Chat Colour\"\r\n                    state = {this.state}\r\n                    handleChange = {this.handleChange}\r\n                    changeCookie = {this.changeCookie}\r\n                    MenuItems = {[\r\n                        ['r',\"Red\"],\r\n                        ['g',\"Green\"],\r\n                        ['b',\"Blue\"],\r\n                        ['y',\"Yellow\"]\r\n                    ]}\r\n                />\r\n\r\n                <DynamicSelect \r\n                    id = \"showConf\"\r\n                    label = \"Show Confidence score?\"\r\n                    state = {this.state}\r\n                    handleChange = {this.handleChange}\r\n                    changeCookie = {this.changeCookie}\r\n                    MenuItems ={[\r\n                        [1,\"Yes\"],\r\n                        [0, \"No\"]\r\n                    ]}\r\n                />\r\n\r\n                <DynamicSelect \r\n                    id = \"numResults\"\r\n                    label = \"Number of Results to Display\"\r\n                    state = {this.state}\r\n                    handleChange = {this.handleChange}\r\n                    changeCookie = {this.changeCookie}\r\n                    MenuItems = {[1,2,3,4,5].map(x => [x, x])}\r\n                />\r\n\r\n                <DynamicSelect \r\n                    id = \"isSummarised\"\r\n                    label = \"Summarise Results?\"\r\n                    state = {this.state}\r\n                    handleChange = {this.handleChange}\r\n                    changeCookie = {this.changeCookie}\r\n                    MenuItems ={[\r\n                        [1,\"Yes\"],\r\n                        [0, \"No\"]\r\n                    ]}\r\n                />\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nOptions.contextType = OptionsContext;\r\nexport default Options;","import React, { Component} from 'react';\r\n\r\n\r\nclass Home extends Component {\r\n    state = {  } \r\n    render() { \r\n        return (\r\n            <div>\r\n                <h1>IBM Cloud for Financial Services Chatbot</h1>\r\n                <h2>Answer queries quickly &amp; easily</h2>\r\n                    <p> This chatbot has been created to aid IBM staff with any queries about the IBM Cloud for Financial Servies. Simply send a message with any of your queries about the Cloud for Financial Services and the chatbot will do its best to answer.</p>\r\n                <h2>Struggling with what to ask?</h2>\r\n                        <p> Try asking: </p>\r\n                        <ul>\r\n                            <li> What is IBM's Cloud for Financial services? </li>\r\n                            <li> What services are offered by the IBM Cloud for Financial Services? </li>\r\n                            <li> How is security implemented with the IBM Cloud for Financial Services?</li>\r\n                        </ul>\r\n                <h2>Other pages</h2>\r\n                    <p>To change the format of the chat visit the <a href=\"/options\">options page</a></p>\r\n                    <p>Visit the <a href=\"https://www.ibm.com/uk-en/cloud/financial-services\"> Cloud for Financial services </a>webpage for more information about the product</p>\r\n\r\n            \r\n            \r\n            \r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            );\r\n    }\r\n}\r\n \r\nexport default Home;","import MuiAppBar from '@mui/material/AppBar';\r\nimport { styled } from '@mui/material/styles';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Title = () => {\r\n    switch (useLocation().pathname) {\r\n        case \"/\":\r\n            return \"Chat\";\r\n        case \"/options\":\r\n            return \"Options\";\r\n        case \"/home\":\r\n            return \"Home\";\r\n        default:\r\n            return \"\";\r\n    }\r\n\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: prop => (\r\n        prop !== 'open' && \r\n        prop !== 'drawerWidth'\r\n    ),\r\n})(\r\n    ({ theme, open, drawerWidth }) => ({\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        ...(open && {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: `${drawerWidth}px`,\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        }),\r\n    }));\r\n\r\nexport default function NavBar(props) {\r\n    return (\r\n        <AppBar position=\"fixed\" drawerWidth={props.drawerWidth} open={props.open}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={props.handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    sx={{ mr: 2, ...(props.open && { display: 'none' }) }}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h4\" noWrap component=\"div\" align=\"center\" sx={{ flexGrow: 1 }}>\r\n                    <Title />\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { styled } from '@mui/material/styles';\r\n\r\nexport default styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n}));","import React from \"react\";\r\nimport DrawerHeader from \"./DrawerHeader\";\r\n\r\nimport { ListItem, ListItemIcon, ListItemText, Divider, IconButton, List, Drawer } from '@mui/material';\r\nimport {Link} from \"react-router-dom\"\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst MenuListItem = ({ text, icon, to}) => {\r\n    return (\r\n        <ListItem button key={text} component={Link} to = {to}>\r\n            <ListItemIcon>\r\n                {icon}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default function LetftMenu(props) {\r\n    return (\r\n        <Drawer\r\n            sx={{\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n                '& .MuiDrawer-paper': {\r\n                    width: drawerWidth,\r\n                    boxSizing: 'border-box',\r\n                },\r\n            }}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={props.open}\r\n        >\r\n            <DrawerHeader>\r\n                <IconButton onClick={props.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </DrawerHeader>\r\n            <Divider />\r\n            <List>\r\n                <MenuListItem text=\"Home\" icon={<HomeIcon />} to=\"home\" />\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <MenuListItem text=\"Chat\" icon={<ChatIcon />} to=\"/\" />\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <MenuListItem text=\"Options\" icon={<SettingsIcon />} to=\"options\" />\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}","import * as React from 'react';\r\nimport Chat from \"./routes/chat\"\r\nimport Options from \"./routes/options\"\r\nimport Home from \"./routes/home\"\r\nimport NavBar from \"./components/Navbar\"\r\nimport LeftMenu from \"./components/LeftMenu\"\r\nimport DrawerHeader from \"./components/DrawerHeader\";\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { styled } from '@mui/material/styles';\r\nimport { defaultOptions, OptionsContext } from \"./components/OptionsContext\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route\r\n} from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst cookies = new Cookies();\r\n\r\n// context options\r\n\r\n\r\nconst Main = styled('main')(\r\n    ({ theme, open }) => ({\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: `-${drawerWidth}px`,\r\n        ...(open && {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        }),\r\n    }),\r\n);\r\n\r\n\r\nfunction App() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    //initialize default cookie values\r\n    if(cookies.get('fontSize') == null){\r\n        cookies.set('fontSize', 1, { path: '/' });\r\n    }\r\n    if(cookies.get('showConf') == null){\r\n        cookies.set('showConf', 1, { path: '/' });\r\n    }\r\n    if(cookies.get('chatColour') == null){\r\n        cookies.set('chatColour', 'b', { path: '/' });\r\n    }\r\n    if(cookies.get('numResults') == null){\r\n        cookies.set('numResults', 1, { path: '/' });\r\n    }\r\n    if(cookies.get('isSummarised') == null){\r\n        cookies.set('isSummarised', 1, { path: '/' });\r\n    }\r\n\r\n\r\n    const cookieOptions = Object.fromEntries(['fontSize', 'chatColour', 'showConf', 'numResults', 'isSummarised'].map((optionName)=>(\r\n        [optionName, cookies.get(optionName)]\r\n    )))\r\n    const [options, setOptions] = React.useState(cookieOptions)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <OptionsContext.Provider value={options}>\r\n            <Router>\r\n                <Box sx={{ display: 'flex', height: '100vh' }}>\r\n                    <CssBaseline />\r\n                    <NavBar handleDrawerOpen={handleDrawerOpen} />\r\n                    <LeftMenu handleDrawerClose={handleDrawerClose} open={open} />\r\n\r\n                    <Main open={open} style={{ padding: '0px' }}>\r\n                        <DrawerHeader />\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            padding: '24px',\r\n                            justifyContent: \"center\",\r\n                            height: \"calc(100vh - 64px)\",\r\n                            margin: \"auto\"\r\n                        }}>\r\n                            <Routes>\r\n                                <Route path=\"/\" element={<Chat cookies = {cookies}/>} />\r\n                                <Route path=\"/options\" element={<Options setOptions = {setOptions} cookies = {cookies} />} />\r\n                                <Route path=\"/home\" element={<Home />} />\r\n                            </Routes>\r\n                        </div>\r\n                    </Main>\r\n                </Box>\r\n            </Router>\r\n        </OptionsContext.Provider>\r\n    );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n<link\r\n  rel=\"stylesheet\"\r\n  href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n/>\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}